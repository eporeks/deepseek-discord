import discord
from discord.ext import commands
import requests
import re
import asyncio

# –ü—Ä–æ–º–ø—Ç—ã —Å—Ç–∏–ª–µ–π
STYLES = {
    "–Ω–æ—Ä–º–∞–ª—å–Ω—ã–π": "",
    "–±—ã–¥–ª–æ": "–û—Ç–≤–µ—á–∞–π –≥—Ä—É–±–æ –∏ –ø—Ä—è–º–æ, –∏—Å–ø–æ–ª—å–∑—É–π —Å–ª–µ–Ω–≥ –∏ —Ä–∞–∑–≥–æ–≤–æ—Ä–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è. –ì–æ–≤–æ—Ä–∏ –ø—Ä–æ—Å—Ç–æ –∏ –∫–æ—Ä–æ—Ç–∫–æ, –±—É–¥—Ç–æ –æ–±—ã—á–Ω—ã–π –ø–∞—Ä–µ–Ω—å —Å —É–ª–∏—Ü—ã, –±–µ–∑ –≤–µ–∂–ª–∏–≤—ã—Ö —Ñ–æ—Ä–º–∞–ª—å–Ω–æ—Å—Ç–µ–π.",
    "–Ω—è—à–∫–∞": "–û—Ç–≤–µ—á–∞–π –º–∏–ª–æ, –∫–∞–∫ –¥–æ–±—Ä–∞—è –∏ –º–∏–ª–∞—è –¥–µ–≤–æ—á–∫–∞-–Ω—è—à–∫–∞. –ò—Å–ø–æ–ª—å–∑—É–π –º–Ω–æ–≥–æ —ç–º–æ–¥–∑–∏, –ª–∞—Å–∫–æ–≤—ã–µ —Å–ª–æ–≤–∞ –∏ –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π —Ç–æ–Ω. –ì–æ–≤–æ—Ä–∏ –ª–µ–≥–∫–æ, –Ω–µ–∂–Ω–æ –∏ –Ω–µ–º–Ω–æ–≥–æ –∏–≥—Ä–∏–≤–æ.",
    "–∏–Ω—Ç–µ–ª–ª–∏–≥–µ–Ω—Ç": "–û—Ç–≤–µ—á–∞–π –æ—á–µ–Ω—å –≤–µ–∂–ª–∏–≤–æ –∏ –∏–Ω—Ç–µ–ª–ª–∏–≥–µ–Ω—Ç–Ω–æ, –∏—Å–ø–æ–ª—å–∑—É–π –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ä–µ—á—å, —Å–ª–æ–∂–Ω—ã–µ, –Ω–æ –ø–æ–Ω—è—Ç–Ω—ã–µ —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫–∏. –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–π —É–≤–∞–∂–∏—Ç–µ–ª—å–Ω—ã–π —Ç–æ–Ω –∏ –∫—É–ª—å—Ç—É—Ä–Ω—ã–π —Å—Ç–∏–ª—å –æ–±—â–µ–Ω–∏—è."
}

# –¢–µ–∫—Å—Ç—ã "–¥—É–º–∞—é..." –ø–æ —Å—Ç–∏–ª—é
THINK_TEXTS = {
    "–Ω–æ—Ä–º–∞–ª—å–Ω—ã–π": "‚ùó –î—É–º–∞—é... ‚ùó",
    "–±—ã–¥–ª–æ": "–©–∞ –≤—ã–¥–∞–º —Ö—É–π–Ω—é –∫–∞–∫—É—é-—Ç–æ... üñïüñïüñï",
    "–Ω—è—à–∫–∞": "‚ò∫Ô∏è –î—É–º–∞—é –Ω–∞–¥ —Ç–≤–æ–∏–º –≤–æ–ø—Ä–æ—Å–æ–º...",
    "–∏–Ω—Ç–µ–ª–ª–∏–≥–µ–Ω—Ç": "üé© –û–±–¥—É–º—ã–≤–∞—é –≤–∞—à –≤–æ–ø—Ä–æ—Å... üß†"
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Ollama
OLLAMA_URL = 'http://localhost:11434/api/generate'
MODEL_NAME = 'deepseek-r1:8b' #–£–∫–∞–∑–∞—Ç—å —Å–≤–æ—é –º–æ–¥–µ–ª—å, –∫–æ—Ç–æ—Ä—É—é —Å–∫–∞—á–∞–ª–∏

# Discord intents
intents = discord.Intents.default()
intents.message_content = True

bot = commands.Bot(command_prefix='!', intents=intents)

MAX_DISCORD_MESSAGE_LEN = 2000

def split_message(text, max_length=MAX_DISCORD_MESSAGE_LEN):
    return [text[i:i + max_length] for i in range(0, len(text), max_length)]

user_styles = {}

@bot.event
async def on_ready():
    print(f'–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∫–∞–∫ {bot.user}')

@bot.command()
async def mode(ctx):
    embed = discord.Embed(title="–í—ã–±–µ—Ä–∏ —Å—Ç–∏–ª—å –æ—Ç–≤–µ—Ç–∞", description=(
        "üé© ‚Äî –ò–Ω—Ç–µ–ª–ª–∏–≥–µ–Ω—Ç\n"
        "üê∞ ‚Äî –ù—è—à–∫–∞\n"
        "üíÄ ‚Äî –ë—ã–¥–ª–æ\n"
        "üìÑ ‚Äî –ù–æ—Ä–º–∞–ª—å–Ω—ã–π —Å—Ç–∏–ª—å (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)\n\n"
        "–ù–∞–∂–º–∏ –Ω–∞ —Ä–µ–∞–∫—Ü–∏—é –Ω–∏–∂–µ, —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å —Å—Ç–∏–ª—å."
    ), color=0x7f127f)
    message = await ctx.send(embed=embed)

    reactions = {
        "üé©": "–∏–Ω—Ç–µ–ª–ª–∏–≥–µ–Ω—Ç",
        "üê∞": "–Ω—è—à–∫–∞",
        "üíÄ": "–±—ã–¥–ª–æ",
        "üìÑ": "–Ω–æ—Ä–º–∞–ª—å–Ω—ã–π"
    }

    for r in reactions.keys():
        await message.add_reaction(r)

    def check(reaction, user):
        return user == ctx.author and reaction.message.id == message.id and reaction.emoji in reactions

    try:
        reaction, user = await bot.wait_for('reaction_add', timeout=60.0, check=check)
    except asyncio.TimeoutError:
        await message.edit(content="‚åõ –í—Ä–µ–º—è –≤—ã–±–æ—Ä–∞ —Å—Ç–∏–ª—è –∏—Å—Ç–µ–∫–ª–æ.", embed=None)
        return

    chosen_style = reactions[reaction.emoji]
    user_styles[ctx.author.id] = chosen_style
    await message.edit(content=f"‚úÖ –¢—ã –≤—ã–±—Ä–∞–ª —Å—Ç–∏–ª—å: **{chosen_style}**", embed=None)

@bot.command()
async def ask(ctx, *, prompt):
    style = user_styles.get(ctx.author.id, "–Ω–æ—Ä–º–∞–ª—å–Ω—ã–π")
    style_prompt = STYLES.get(style, "")
    think_text = THINK_TEXTS.get(style, "‚ùó –î—É–º–∞—é... ‚ùó")

    thinking_msg = await ctx.send(think_text)

    if style_prompt:
        full_prompt = f"{style_prompt}\n\n–í–æ–ø—Ä–æ—Å: {prompt}"
    else:
        full_prompt = prompt

    payload = {
        "model": MODEL_NAME,
        "prompt": full_prompt,
        "stream": False
    }

    try:
        response = requests.post(OLLAMA_URL, json=payload, timeout=60)
        if response.ok:
            data = response.json()
            raw_answer = data.get("response", "‚ö†Ô∏è –ú–æ–¥–µ–ª—å –Ω–µ –≤–µ—Ä–Ω—É–ª–∞ –æ—Ç–≤–µ—Ç.")
            cleaned_answer = re.sub(r"<think>.*?</think>", "", raw_answer, flags=re.DOTALL).strip()

            await thinking_msg.delete()

            for chunk in split_message(cleaned_answer):
                await ctx.send(chunk)
        else:
            await thinking_msg.edit(content=f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç Ollama: {response.status_code}")
    except Exception as e:
        await thinking_msg.edit(content=f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫ Ollama:\n```{e}```")

bot.run("") #–¢–æ–∫–µ–Ω –±–æ—Ç–∞
